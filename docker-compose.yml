services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: lms_dev
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d lms_dev || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10

  web:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "4000:4000"
    env_file:
      - .env
    environment:
      MIX_ENV: "dev"
      PHX_SERVER: "true"
      PHX_HOST: "localhost"
      PORT: "4000"
      # dev-та тікелей URL беру ыңғайлы (runtime.exs prod-та ғана ENV оқысын)
      DATABASE_URL: "ecto://postgres:postgres@db:5432/lms_dev"
      SECRET_KEY_BASE: "${SECRET_KEY_BASE}"
      LIVE_VIEW_SIGNING_SALT: "${LIVE_VIEW_SIGNING_SALT}"
    volumes:
      # ЛОКАЛ КОД ↔ КОНТЕЙНЕР: өзгеріс бірден көрінеді
      - ./:/app
      # build/deps/node_modules контейнер ішінде сақталсын (жинақ тезірек)
      - deps:/app/deps
      - build:/app/_build
      - node_modules:/app/assets/node_modules
    command: >
      sh -lc "mix deps.get &&
              mix ecto.create &&
              mix ecto.migrate &&
              mix phx.server"

volumes:
  pgdata:
  deps:
  build:
  node_modules:
